<?xml version="1.0" encoding="UTF-8" ?>
<pbj-schema xmlns="http://gdbots.io/pbj/xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://gdbots.io/pbj/xsd http://gdbots.io/pbj/xsd/schema.xsd">

  <schema id="pbj:gdbots:iam:mixin:user:1-0-0" mixin="true" extends="gdbots:ncr:mixin:node:v1">
    <fields>
      <field name="first_name" type="string"/>
      <field name="last_name" type="string"/>
      <field name="email" type="string" format="email"/>
      <field name="email_domain" type="string" format="hostname"/>
      <field name="phone" type="string" pattern="^\+?[1-9]\d{1,14}$" rule="map">
        <description>
          A general format for international telephone numbers.
          @link https://en.wikipedia.org/wiki/E.164
        </description>
      </field>
      <field name="networks" type="string" pattern="^[\w\.-]+$" max="50" rule="map">
        <description>
          Networks is a map that contains handles/usernames on a social network.
          E.g. facebook:homer, twitter:stackoverflow, youtube:coltrane78.
        </description>
      </field>
      <field name="is_blocked" type="boolean"/>
      <field name="is_staff" type="boolean">
        <description>
          Indicates that the user is a staff member and has access to the cms, dashboard, etc.
        </description>
      </field>
      <field name="roles" type="identifier" rule="set">
        <description>
          A user's roles determine what permissions they'll have when using the system.
          The role itself is a node which has a set of "allow" and "deny" rules.
        </description>
        <php-options>
          <imports>use Gdbots\Schemas\Ncr\NodeRef;</imports>
          <class-name>NodeRef::class</class-name>
        </php-options>
        <js-options>
          <imports>import NodeRef from '@gdbots/schemas/gdbots/ncr/NodeRef';</imports>
          <class-proto>NodeRef</class-proto>
        </js-options>
      </field>
    </fields>

    <php-options>
      <insertion-points>
        <imports/>
        <methods>
          <![CDATA[
/**
 * @return array
 */
public function getUriTemplateVars()
{
    return ['user_id' => (string)$this->get('_id')];
}
            ]]>
        </methods>
      </insertion-points>
    </php-options>

    <js-options>
      <insertion-points>
        <methods>
          <![CDATA[
/**
 * @returns {Object}
 */
getUriTemplateVars() {
  return { user_id: `${this.get('_id', '')}` };
}
            ]]>
        </methods>
      </insertion-points>
    </js-options>
  </schema>
</pbj-schema>
