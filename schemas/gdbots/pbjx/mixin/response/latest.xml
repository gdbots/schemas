<?xml version="1.0" encoding="UTF-8" ?>
<pbj-schema xmlns="http://gdbots.io/pbj/xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://gdbots.io/pbj/xsd http://gdbots.io/pbj/xsd/schema.xsd">

  <schema id="pbj:gdbots:pbjx:mixin:response:1-0-2" mixin="true">
    <fields>
      <field name="response_id" type="uuid" required="true"/>
      <field name="created_at" type="microtime"/>
      <field name="ctx_tenant_id" type="string" pattern="^[\w\/\.:-]+$">
        <description>
          Multi-tenant apps can use this field to track the tenant id.
        </description>
      </field>
      <field name="ctx_request_ref" type="message-ref"/>
      <field name="ctx_request" type="message">
        <description>
          The "ctx_request" is the actual request object that "ctx_request_ref" refers to.
          In some cases it's useful for request handlers to copy the request into the response
          so the requestor has everything in one message. This will NOT always be populated.
          A common use case is search request/response cycles where you want to know what the
          search criteria was so you can render that along with the results.
        </description>
        <any-of>
          <curie>gdbots:pbjx:mixin:request</curie>
        </any-of>
      </field>
      <field name="ctx_correlator_ref" type="message-ref"/>
      <field name="derefs" type="message" rule="map">
        <description>
          Responses can include "dereferenced" messages to prevent
          the consumer from needing to make multiple HTTP requests.
          It is up to the consumer to make use of the dereferenced
          messages if/when they are provided.
        </description>
      </field>
      <field name="links" type="text" rule="map">
        <description>
          @link https://en.wikipedia.org/wiki/HATEOAS
        </description>
      </field>
      <field name="metas" type="text" rule="map"/>
    </fields>

    <php-options>
      <insertion-points>
        <imports>
          <![CDATA[
use Gdbots\Pbj\WellKnown\MessageRef;
            ]]>
        </imports>
        <methods>
          <![CDATA[
public function generateMessageRef(?string $tag = null): MessageRef
{
    return new MessageRef(self::schema()->getCurie(), $this->fget('response_id'), $tag);
}

public function getUriTemplateVars(): array
{
    return [
        'response_id' => $this->fget('response_id'),
        'created_at' => $this->fget('created_at'),
        'ctx_tenant_id' => $this->fget('ctx_tenant_id'),
    ];
}
            ]]>
        </methods>
      </insertion-points>
    </php-options>

    <js-options>
      <insertion-points>
        <imports>
          <![CDATA[
import MessageRef from '@gdbots/pbj/well-known/MessageRef';
            ]]>
        </imports>
        <methods>
          <![CDATA[
/**
 * @param {?string} tag
 * @returns {MessageRef}
 */
generateMessageRef(tag = null) {
  return new MessageRef(this.schema().getCurie(), this.get('response_id'), tag);
},

/**
 * @returns {Object}
 */
getUriTemplateVars() {
  return {
    response_id: `${this.get('response_id')}`,
    created_at: `${this.get('created_at')}`,
    ctx_tenant_id: this.get('ctx_tenant_id'),
  };
}
            ]]>
        </methods>
      </insertion-points>
    </js-options>
  </schema>
</pbj-schema>
